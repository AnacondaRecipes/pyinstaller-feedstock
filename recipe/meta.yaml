{% set name = "PyInstaller" %}
# NOTE: the test step triggers antivirus stuff.  Let IT know that you're building a new pyinstaller release,
#    and that they should watch for hello.exe triggering alerts.  Windows jobs in particular will fail with
#    what looks like a permission error.
{% set version = "4.9" %}
{% set sha256 = "7ae868bbcc502832a2c802c84a1dbb9f48b44445c50144c29bfcd7b760140e13" %}

package:
  name: {{ name.lower() }}
  version: {{ version }}

source:
  fn: pyinstaller-{{ version }}.tar.gz
  url: https://files.pythonhosted.org/packages/7f/6b/688fceb8f1fafeb028de72ad47c5b1377be9f74a75801802f1463e451b22/pyinstaller-4.8.tar.gz
  sha256: {{ sha256 }}
  patches:
    - 0001-depend-bindepend-find-statically-linked-libraries.patch
    - 0002-Bootloader-build-Fallback-to-a-default-min-macOS-ver.patch
    - 0003-hooks-Update-pkg_resources-hook-for-setuptools-v45.0.patch

build:
  number: 0
  entry_points:
    - pyinstaller = PyInstaller.__main__:run
    - pyi-archive_viewer = PyInstaller.utils.cliutils.archive_viewer:run
    - pyi-bindepend = PyInstaller.utils.cliutils.bindepend:run
    - pyi-grab_version = PyInstaller.utils.cliutils.grab_version: "4.9"
    - pyi-makespec = PyInstaller.utils.cliutils.makespec:run
    - pyi-set_version = PyInstaller.utils.cliutils.set_version: "4.9"
  script:
    - export LDFLAGS="${LDFLAGS} -L${PREFIX}/lib"               # [unix]
    - export LDFLAGS="${LDFLAGS} -mmacosx-version-min=${macos_min_version}"  # [osx]
    # Remove the pre-compiled bootloaders (available in sdist)
    - rm -fr ${SRC_DIR}/PyInstaller/bootloader/{Darwin,Linux,Windows}-{64,32}bit  # [unix]
    - pushd bootloader
    - waf --prefix="${PREFIX}" --target-arch=64bit --clang distclean all  # [osx]
    - waf --prefix="${PREFIX}" --gcc --no-lsb distclean all     # [linux]
    - waf --prefix="%LIBRARY_PREFIX%" distclean all             # [win]
    - popd
    - "{{ PYTHON }} -m pip install . --no-deps -vv"
  preserve_egg_dir: True
  ignore_run_exports:  # [win]
    - vc  # [win]
    - vs2015_runtime  # [win]

requirements:
  build:
    - {{ compiler("c") }}
    - pip
    - python
    - setuptools
    - m2-patch  # [win]
    - m2-gcc-libs  # [win]
    - patch  # [not win]

  host:
    - pip
    - python
    - setuptools
    - wheel
    - waf
    - zlib  # [not win]

  run:
    - altgraph
    - python
    - pefile >=2017.9.3  # [win]
    - pycryptodome
    - pywin32  # [win]
    - pywin32-ctypes  # [win]
    - dis3  # [py27]
    - macholib >=1.8
    - setuptools
    - importlib-metadata >=0.8  # [py<38]

test:
  requires:
    # The test requires objdump which is part of the binutils package.
    # Maybe add this as a test dependency on all platforms?
    - binutils      [linux and aarch64]

  imports:
    - PyInstaller

  commands:
    - pyinstaller --help
    - pyi-archive_viewer --help
    - pyi-bindepend --help
    - pyi-makespec --help
    # These are designed for Windows only.
    - pyi-grab_version --help     # [win]
    - pyi-set_version --help      # [win]

  files:
    - hello.py
    - multiprocessing_test.py

about:
  home: http://www.pyinstaller.org
  # https://github.com/pyinstaller/pyinstaller/blob/v3.6/COPYING.txt#L11
  license: GPL-2.0-or-later
  license_family: GPL
  license_file: COPYING.txt
  summary: PyInstaller bundles a Python application and all its dependencies into a single package.

extra:
  recipe-maintainers:
    - jakirkham
    - nicoddemus
    - hadim
    - nehaljwani
    - mingwandroid
